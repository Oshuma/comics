#!/usr/bin/env bash

case "$RAILS_ENV" in
production)
	container="comics"
	database="comics"
	network="comics"
	storage="comics"
	;;
*)
	container="comics_development"
	database="comics_development"
	network="comics_development"
	storage="comics_development"
	;;
esac

latest="comics:latest"
: "${IMAGE:=$latest}"

db_container="postgres"
db_url="postgres://postgres:postgres@$db_container:5432/$database"
: "${DATABASE_URL:=$db_url}"

dev_key=$(cat config/master.key)
: "${RAILS_MASTER_KEY:=$dev_key}"

# TODO: Merge passed in args with `docker run` args below.
echo "== Starting container"
docker run \
	-it \
	--rm \
	--detach \
	--name $container \
	-p 3000:3000 \
	-e DATABASE_URL=$DATABASE_URL \
	-e RAILS_ENV=$RAILS_ENV \
	-e RAILS_MASTER_KEY=$RAILS_MASTER_KEY \
	-v $storage:/app/storage \
	$IMAGE

echo "== Setting up network"
docker network create $network 2>/dev/null
docker network connect $network $container 2>/dev/null
docker network connect $network $db_container 2>/dev/null

echo "== Running migrations"
docker exec -it $container sh -c "bin/rails db:create && bin/rails db:migrate"

echo "== Attaching to container"
docker logs $container # Dump any logs printed before attaching.
docker attach $container

echo "== Cleaning up"
docker network disconnect $network $db_container 2>/dev/null
docker network rm $network 2>/dev/null
